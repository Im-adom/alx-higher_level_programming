Test cases for 101_lazy_matrix
===========================

Using the ``lazy_matrix`` function
---------------------------

Importing function from the module:

>>> matrix_mul  = __import__('101-lazy_matrix_mul').lazy_matrix_mul

first matrix is not a list
>>> m_a = "hello"
>>> m_b = [[1, 2, 3]]

>>> matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: Scalar operands are not allowed, use '*' instead

second matrix is not a list
>>> m_b = "hello"
>>> m_a = [[1, 2, 3], [4, 5, 6]]

>>> matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: Scalar operands are not allowed, use '*' instead

first matrix is empty
>>> m_a =[]
>>> m_b = [[1, 2, 3], [4, 5, 6]]

>>> matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: shapes (0,) and (2,3) not aligned: 0 (dim 0) != 2 (dim 0)

second matrix is empty
>>> m_b =[]
>>> m_a = [[1, 2, 3], [4, 5, 6]]

>>> matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: shapes (2,3) and (0,) not aligned: 3 (dim 1) != 0 (dim 0)


one element of the first matrix is not an int or a float
>>> m_a = [[1, 2, "hi"], [4, 5, 6]]
>>> m_b = [[1, 2, 3], [4, 5, 6]]

>>> matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: shapes (2,3) and (2,3) not aligned: 3 (dim 1) != 2 (dim 0)

one element of the second matrix is not an int or a float
>>> m_b = [[1, 2, "hi"], [4, 5, 6]]
>>> m_a = [[1, 2, 3], [4, 5, 6]]

>>> matrix_mul(m_a, m_b)
Traceback (most recent call last):
ValueError: shapes (2,3) and (2,3) not aligned: 3 (dim 1) != 2 (dim 0)

row in the matrix are not the same size
>>> m_a = [[1, 2, 3], [4, 5]]
>>> m_b = [[1, 2, 3], [4, 5, 6]]

>>> matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: setting an array element with a sequence.

>>> m_b = [[1, 2, 3], [4, 5]]
>>> m_a = [[1, 2, 3], [4, 5, 6]]

>>> matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: setting an array element with a sequence.

>>> m_b = [[1, 2, 3], [4, 5, 6]]
>>> m_a = [[1, 2, 3]]

>>> matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: shapes (1,3) and (2,3) not aligned: 3 (dim 1) != 2 (dim 0)

>>> matrix_mul(m_a)
Traceback (most recent call last):
    ...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
>>> matrix_mul()
Traceback (most recent call last):
    ...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
